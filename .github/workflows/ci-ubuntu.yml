name: Build & Test under Ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: go test -v ./tests/

    - name: Create output folder for binaries
      if: success()
      run: mkdir ./bin/

    - name: Build for linux
      if: success()
      run: |
        GOOS=linux GOARCH=amd64 go build -o "./bin/go-radio-$GITHUB_SHA-linux-amd64" .
        GOOS=linux GOARCH=386 go build -o "./bin/go-radio-$GITHUB_SHA-linux-386" .
        GOOS=linux GOARCH=arm go build -o "./bin/go-radio-$GITHUB_SHA-linux-arm" .

    - name: List available builds
      run: |
        echo $GITHUB_SHA
        ls build

    - name: Upload amd64 build
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: $GITHUB_SHA for linux/amd64
        path: bin/go-radio-$GITHUB_SHA-linux-amd64
        retention-days: 14

    - name: Upload 386 build
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: $GITHUB_SHA for linux/386
        path: bin/go-radio-$GITHUB_SHA-linux-386
        retention-days: 14

    - name: Upload arm build
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: $GITHUB_SHA for linux/arm
        path: bin/go-radio-$GITHUB_SHA-linux-arm
        retention-days: 14
